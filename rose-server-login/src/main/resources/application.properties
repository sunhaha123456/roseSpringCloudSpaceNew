spring.profiles.active=dev

#server
server.port=${login.server.port}
server.servlet.context-path=/${login.server.path}
server.tomcat.uri-encoding=UTF-8

#redis
spring.redis.host=${login.server.redis.host}
spring.redis.port=${login.server.redis.port}
spring.redis.database=${login.server.redis.database}
spring.redis.password=${login.server.redis.password}

mybatis.mapper-locations=classpath*:com/rose/parent/dbopt/mapperxml/*.xml

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${login.server.db.host}/${login.server.db.schema}?serverTimezone=GMT%2B8&characterEncoding=UTF-8&useUnicode=true
spring.datasource.username=${login.server.db.user}
spring.datasource.password=${login.server.db.pwd}

#log
logging.config=classpath:logback.xml
logging.level.com.rose.dbopt.mapper=DEBUG

spring.servlet.multipart.maxFileSize=5MB
spring.servlet.multipart.maxRequestSize=7MB

# 服务名称尽量用-，不要用_，不要用特殊字符
spring.application.name=${login.server.path}
# 指定nacos server的地址
spring.cloud.nacos.discovery.server-addr=${nacos.server.host}
# 指定namespace
spring.cloud.nacos.discovery.namespace=${nacos.server.namespace}

# 打开/关闭掉对Spring MVC端点的保护
spring.cloud.sentinel.filter.enabled=true
# 指定sentinel 控制台的地址
spring.cloud.sentinel.transport.dashboard=${sentinel.dashboard.host}
# 指定和控制台通信的ip，如不配置，会自动注册一个ip地址
#spring.cloud.sentinel.transport.client-ip=127.0.0.1
# 指定和控制台通知的端口，默认值是8719，
# 如不设置，会自动从8719开始扫描，依次+1，直到找到未占用的
spring.cloud.sentinel.transport.port=${sentinel.dashboard.port}

spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1.0